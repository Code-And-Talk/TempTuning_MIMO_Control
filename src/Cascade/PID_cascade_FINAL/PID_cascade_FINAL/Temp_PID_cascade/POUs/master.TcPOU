<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="master" Id="{a879b6bf-7db0-4565-8869-c4d1ff680093}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM master
VAR
(*-------------------------------------------- master 입력 변수 --------------------------------------------*)	
	m_bsimulation					 : BOOL;
	master_bstart					 : bool;
	m_bRamp_Enable                   : BOOL;
	m_fRamp_Value                    : ARRAY[1..4] OF LREAL;
	m_fMV_Out						 : ARRAY[1..4] OF LREAL;
	m_fPV_Value						 : ARRAY[1..4] OF LREAL;
	m_fPV_Value_					 : ARRAY[1..4] OF LREAL;
	
	
    m_fTargetTemp                    : LREAL;
	m_fPowLimit_                     : ARRAY[1..4] OF LREAL;
	m_btuning_mode 	     			 : BOOL;
	m_Sampling_Time					 : LREAL;                    // Sampling time (적용시간 간격)
	m_integral_constant			 	 : ARRAY[1..4] OF LREAL;	//PI제어기 적분상수
	m_pi_gain                        : ARRAY[1..4] OF LREAL;	//PI제어기 이득(gain)
	
	m_Set_Value						 : LREAL;
	m_fLast_Set_Value            	 : ARRAY[1..4] OF LREAL;
		
	
	(*slave가 완료되었을 경우 slave에서 받음*)
	master_subTC_AVG                 : LREAL;                              		// 글래스 온도 평균(9개 평균 = g_bar)
	
(*-------------------------------------------- master 출력 변수 --------------------------------------------*)

	master_Zone_AVG                :   ARRAY[1..4] OF LREAL;                	// 글래스 온도 평균(4개 더해서 4로 나눔 )
	
	
	mErr_Value                     :   ARRAY[1..4] OF LREAL;                    // 제어오차 (set_temp - msater_subTC_AVG);
	mErr_integral_Val			   :   ARRAY[1..4] OF LREAL := [0 , 0, 0, 0 ];  // 오차의 적분(se , 초기값 = 0)
	
	m_min_per					   :	LREAL;
	m_max_per					   :	LREAL;
	m_Zone_Temp_Min                :    LREAL;
	m_Zone_Temp_Max                :    LREAL;
	
	i: INT;
	
	fbCTRL_RAMP_GENERATOR			 :   ARRAY[1..4] OF FB_CTRL_RAMP_GENERATOR;
	stCTRL_RAMP_GENERATOR_PARAMS     :   ARRAY[1..4] OF ST_CTRL_RAMP_GENERATOR_PARAMS;
	
	tTime						:			TIME;
	tTaskCycleTime				:			TIME := T#1MS;
	tCtrlCycleTime				:			TIME := T#200MS;
	
	fbCTRL_PT2				    : 			ARRAY[1..4] OF FB_CTRL_PT2;
	stPTParams				    : 			ARRAY[1..4] OF ST_CTRL_PT2_PARAMS;
	
		(* Ramp Parameter Set *)
	m_bRamp_Use				    :			BOOL;	
	m_fRamp_Rate				:			ARRAY[1..4] OF LREAL := [10 , 10, 10 , 10 ];
	m_fRamp_Out 			    : 			ARRAY[1..4] OF LREAL;	
END_VAR
(* ================ Simulation Constant Parameter =======================*)
VAR CONSTANT
	m_fKp							:			ARRAY[1..4] OF REAL := [16.5, 17.5, 18.5, 19.5];
	m_fInit_Temp					:			ARRAY[1..4] OF REAL := [23.5, 24.5, 23.9, 24.2];
	m_tTimeConstant					:			ARRAY[1..4] OF TIME := [T#251.4S, T#301.4S, T#275.4S, T#292.4S];
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF master_bstart THEN
	
	m_Sampling_Time 	 := mgbl.master_Sampling_Time;
	m_integral_constant  := mgbl.master_integral_constant;
	m_pi_gain    		 := mgbl.master_pi_gain;
	m_fTargetTemp		 := mgbl.master_TargetTemp;
	m_min_per		     := mgbl.master_Zone_Temp_Min_per;
	m_max_per	         := mgbl.master_Zone_Temp_Max_per;
	
	FOR i:=1 TO 4 BY 1 DO
		
		m_fPowLimit_[i] := mgbl.master_PowLimit_[i];
		mErr_Value[i] := m_fTargetTemp - master_subTC_AVG;
		mErr_integral_Val[i] := mErr_integral_Val[i] + (mErr_Value[i] * m_Sampling_Time);
		master_Zone_AVG[i] := (m_pi_gain[i] * mErr_Value[i]) + (m_pi_gain[i]/m_integral_constant[i] * mErr_integral_Val[i]) + m_fTargetTemp;
		 
		m_Zone_Temp_Min := master_Zone_AVG[i] - (master_Zone_AVG[i] * m_min_per / 100);
		m_Zone_Temp_Max := master_Zone_AVG[i] + (master_Zone_AVG[i] * m_max_per / 100);
		
		IF master_Zone_AVG[i] < m_Zone_Temp_Min THEN
			master_Zone_AVG[i] := m_Zone_Temp_Min;
			mErr_integral_Val[i] :=  mErr_integral_Val[i] - mErr_Value[i]* m_Sampling_Time;
		ELSIF master_Zone_AVG[i] > m_Zone_Temp_Max THEN
			master_Zone_AVG[i] := m_Zone_Temp_Max; 
			mErr_integral_Val[i] :=  mErr_integral_Val[i] - mErr_Value[i]* m_Sampling_Time;
		END_IF
		
	END_FOR
	 sgbl.slave_fTargetTemp := master_Zone_AVG;
END_IF

]]></ST>
    </Implementation>
    <Action Name="RAMPING" Id="{61abb805-2c73-414c-961c-5d3ed33b63a1}">
      <Implementation>
        <ST><![CDATA[
;
IF m_bRamp_Use THEN
	FOR i:=1 TO 4 BY 1 DO
		fbCTRL_RAMP_GENERATOR[i]( bEnable   := m_bRamp_Use,
								fStart   := m_fLast_Set_Value[i],
								fTarget  := m_Set_Value[i],
								stParams := stCTRL_RAMP_GENERATOR_PARAMS[i],
								fOut   => m_fRamp_Out[i],
								fVeloOut  => ,
								bValueReached => ,
								eErrorId => ,
								bError =>
								)
	;
	END_FOR					

ELSE
	FOR i:=1 TO 4 BY 1 DO
		m_fRamp_Out[i] := m_Set_Value[i];
	;
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="SIMULATION" Id="{af2aa546-01ee-4557-85a2-6a7748b696ea}">
      <Implementation>
        <ST><![CDATA[

FOR i:=1 TO 4 BY 1 DO
	stPTParams[i].tTaskCycleTime	:= tTaskCycleTime;
	stPTParams[i].tCtrlCycleTime	:= tCtrlCycleTime;
	stPTParams[i].tT1				:= stPTParams[i].tT2 := m_tTimeConstant[i];
	stPTParams[i].fKp				:= m_fKp[i];


	fbCTRL_PT2[i](
					fIn			:= m_fMV_Out[i] ,
					eMode		:= eCtrl_MODE_ACTIVE,
					stParams	:= stPTParams[i],
					fOut		=> m_fPV_Value_[i]
					);	
					
	IF m_fPV_Value_[i] <= m_fInit_Temp[i] THEN
		m_fPV_Value[i] := m_fInit_Temp[i];
	ELSE
		m_fPV_Value[i] := m_fPV_Value_[i];
	END_IF 	
	
END_FOR

]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="master">
      <LineId Id="155" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="142" Count="4" />
      <LineId Id="153" Count="1" />
      <LineId Id="34" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="160" Count="2" />
      <LineId Id="49" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="66" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="master.RAMPING">
      <LineId Id="2" Count="21" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="master.SIMULATION">
      <LineId Id="2" Count="23" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>