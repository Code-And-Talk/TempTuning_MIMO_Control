<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{c7996b60-7a70-413b-abcb-6b6ff75a050d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR	
	onTimer 			: TON;
	OffTimer 			: TOF;
	timerStart			: BOOL;
	reverseSignal 		: BOOL;
	
	onTimer_tune  		: TON;
	OffTimer_tune 		: TOF;
	reverseSignal_tune  : BOOL;
	
	i    				: INT;
	zoneIndex			: INT;
	
	(* 행렬 *)
	A                   : ARRAY[1..3] OF ARRAY [1..3] OF LREAL; // 3X3
    B                   : ARRAY[1..3] OF ARRAY [1..2] OF LREAL; // 3X2
   
    j                   : INT;
    cnt                 : INT :=0;
    start               : BOOL := FALSE;
    result              : ARRAY[1..3] OF ARRAY [1..2] OF LREAL; //3X2
    k                   : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF gbl.slave_bsimulation = FALSE THEN

	FOR i:=1 TO 4 BY 1 DO
		gbl.slave_fPV_Value[i] := IOgbl.AI_IO_slave_pv[i] / 10 ;
		IOgbl.AO_IO_SCR_set[i] := LREAL_TO_UINT(gbl.slave_fMV_Out[i] * 327.67);
	END_FOR
	
	FOR i:=1 TO 9 BY 1 DO
		gbl.fPV_Value_SubTC[i] := IOgbl.AI_IO_ST_temp[i] / 10 ;
	END_FOR
	
ELSE
	slave.SIMULATION() ;
	master.Substrate_Simulation();
END_IF

(* watch dogs : 10s 간격으로 on/ off *)
onTimer(IN := OffTimer.Q, PT := T#10S);
IF onTimer.Q THEN
  reverseSignal := FALSE;
  gbl.bWatch := FALSE;
ELSE
  reverseSignal := TRUE;
  gbl.bWatch := TRUE;
END_IF
OffTimer(IN := reverseSignal, PT := T#10S);

(* 
mgbl.master_tuning_mode = tune set
tune set :  true -> master, slave호출
tune set :  false -> slave만 호출
*)
IF gbl.tuning_mode THEN

	master();
	slave ();
	
  (* 튜닝 시간 설정 = mgbl.master_tuning_time *)
    onTimer_tune(IN := OffTimer_tune.Q, PT := LREAL_TO_TIME(gbl.tuning_time)*60000);  // IN이 FALSE에서 TRUE가 되자마자 시간이 흐름,PT와 같아지면 Q가 TRUE
	gbl.tune_Remaining_time := TIME_TO_LREAL(onTimer_tune.PT - onTimer_tune.ET);
	
    IF onTimer_tune.Q THEN
	  reverseSignal_tune  := FALSE;
	  gbl.tune_result 	  := gbl.slave_fPV_Value;
	  
	  gbl.heatupData[gbl.tuningCount + 1 - gbl.tuningIndex] 	:= gbl.newData;

	  FOR i:=1 TO 4 BY 1 DO
		  FOR j:=1 TO gbl.arrSize BY 1 DO
		  	gbl.oldData[i, j] := 0;
		  END_FOR
	  END_FOR
	  
	  gbl.oldData	  := gbl.newData ;
	  gbl.tuningIndex := gbl.tuningIndex + 1 ;
	  
	  FOR zoneIndex:=1 TO 4 BY 1 DO
		  FOR i:=1 TO gbl.index BY 1 DO
			  gbl.newData[zoneIndex, i] := 0;
		  END_FOR
	  END_FOR
	  
	  gbl.index := 1;
	  IF gbl.tuningIndex >= (gbl.tuningCount-1) THEN
		  gbl.tuningIndex := 0;
		  gbl.tuning_mode := FALSE;
	  END_IF
	  
	  gbl.bTimeOver := TRUE;
	  
	ELSE
	  reverseSignal_tune := TRUE;
	  IF gbl.bRestart THEN
		  FOR i:=1 TO 4 BY 1 DO
		  	FOR j:=1 TO gbl.arrSize BY 1 DO
				gbl.oldData[i, j] := 0;
		  	END_FOR
		  END_FOR
		  gbl.oldData	  := gbl.newData ;
		  reverseSignal_tune  := FALSE;
		  gbl.tuning_mode := FALSE;
		  gbl.bRestart := FALSE;
		  gbl.tuning_mode := TRUE;
		  gbl.heatupData[gbl.tuningCount + 1 - gbl.tuningIndex] 	:= gbl.newData;
		  gbl.tune_result := gbl.slave_fPV_Value;
	  END_IF
    END_IF
	
    OffTimer_tune(IN := reverseSignal_tune, PT := T#0S); // IN이 TRUE에서 FALSE가 되자마자 시간이 흐름, PT와 같아지면 Q가 FALSE
ELSE
	slave();
END_IF


(*
3*2행렬

IF start THEN
   start := FALSE;
   FOR i:=1 TO 3 BY 1 DO
      FOR j:=1 TO 3 BY 1 DO
         A[i][j] := cnt := cnt+1;
      END_FOR
      FOR j:=1 TO 2 BY 1 DO
         B[i][j] := i;
      END_FOR
   END_FOR
   FOR i:=1 TO 3 BY 1 DO
      FOR j:=1 TO 2 BY 1 DO
         FOR k:=1 TO 3 BY 1 DO
            result[i][j] := result[i][j] + A[i][k] * B[k][j];
         END_FOR
      END_FOR
   END_FOR
END_IF
*)
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="338" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="332" Count="1" />
      <LineId Id="362" Count="1" />
      <LineId Id="371" Count="1" />
      <LineId Id="364" Count="1" />
      <LineId Id="368" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="659" Count="0" />
      <LineId Id="657" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="145" Count="8" />
      <LineId Id="35" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="699" Count="1" />
      <LineId Id="691" Count="0" />
      <LineId Id="247" Count="2" />
      <LineId Id="463" Count="0" />
      <LineId Id="609" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="252" Count="0" />
      <LineId Id="387" Count="0" />
      <LineId Id="732" Count="1" />
      <LineId Id="766" Count="0" />
      <LineId Id="765" Count="0" />
      <LineId Id="762" Count="2" />
      <LineId Id="760" Count="0" />
      <LineId Id="767" Count="0" />
      <LineId Id="415" Count="0" />
      <LineId Id="683" Count="0" />
      <LineId Id="465" Count="0" />
      <LineId Id="431" Count="0" />
      <LineId Id="428" Count="2" />
      <LineId Id="437" Count="0" />
      <LineId Id="466" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="685" Count="2" />
      <LineId Id="684" Count="0" />
      <LineId Id="467" Count="0" />
      <LineId Id="798" Count="1" />
      <LineId Id="253" Count="1" />
      <LineId Id="703" Count="0" />
      <LineId Id="769" Count="3" />
      <LineId Id="768" Count="0" />
      <LineId Id="708" Count="0" />
      <LineId Id="704" Count="3" />
      <LineId Id="759" Count="0" />
      <LineId Id="800" Count="0" />
      <LineId Id="702" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="256" Count="3" />
      <LineId Id="688" Count="0" />
      <LineId Id="632" Count="0" />
      <LineId Id="610" Count="21" />
      <LineId Id="482" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>