<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{e591b92d-02fc-493d-897c-d8225ccc0ad6}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR	
	
	fMV_Out						:			ARRAY[1..4] OF LREAL;
	fPV_Value					:			ARRAY[1..4] OF LREAL;
	fPV_Value_					:			ARRAY[1..4] OF LREAL;
	
	tTime						:			TIME;
	tTaskCycleTime				:			TIME := T#1MS;
	tCtrlCycleTime				:			TIME := T#200MS;
	
	fbCTRL_PT2				: 			ARRAY[1..4] OF FB_CTRL_PT2;
	stPTParams				: 			ARRAY[1..4] OF ST_CTRL_PT2_PARAMS;

	
	stCTRL_ParaController_Ex	:			ARRAY[1..4] OF ST_CTRL_ParaController;
	stCTRL_ParaController_In	:			ARRAY[1..4] OF ST_CTRL_ParaController;
	stCTRL_TempCtrlParameter	:			ARRAY[1..4] OF ST_CTRL_TempCtrlParameter;
	
	
	fbCTRL_TempController		:			ARRAY[1..4] OF FB_CTRL_TempController;
		
	eCTRL_STATE					:			ARRAY[1..4] OF E_CTRL_STATE;
	
	e_Heat_Mode					:			E_CTRL_ControlMode 			:= eCTRL_ControlMode_HEATING;
	e_Fail_Action				:			E_CTRL_ReactionOnFailure 	:= eCTRL_ReactionOnFailure_NoFailure;
	
	bError						:			BOOL;
	nErrorID					:			INT;
	fMaxOvershoot				:			LREAL;
	
	bFirst						:			BOOL := TRUE;
	
	(* Ramp Parameter Set *)
	bRampingUse					:			BOOL;	
	fRampingRate				:			ARRAY[1..4] OF LREAL := [10 , 10, 10 , 10 ];
	
	
	(* =============== Setting Item 입력 =============== *)
	
	(* PID Set Parameter *)
	P_Value						:			ARRAY[1..4] OF LREAL					;
	I_Value						:			ARRAY[1..4] OF TIME						;
	D_Value						:			ARRAY[1..4] OF TIME						;
	
	(* Power Limit Set *)
	fPowerLimit					:			LREAL;
	
	(* Manual Control 시 Power 출력값 *)
	fSetManual					:			LREAL;
	
	(*	Heater Mode	*)
	eCTRL_MODE					:			E_CTRL_MODE;			(* Auto Mode 동작은 2 : eCTRL_MODE_ACTIVE 설정 *)
	
	(*	온도 설정 입력	*)
	fSet_Value					:			ARRAY[1..4] OF LREAL;
	fLast_Set_Value             :           ARRAY[1..4] OF LREAL;
	bStart						:			BOOL;
	
	(*	비상정지	*)
	bEmergency_Stop				:			BOOL;
	
	fbCTRL_RAMP_GENERATOR : ARRAY[1..4] OF FB_CTRL_RAMP_GENERATOR;
	stCTRL_RAMP_GENERATOR_PARAMS : ARRAY[1..4] OF ST_CTRL_RAMP_GENERATOR_PARAMS;
	
	
	fRampingOut : ARRAY[1..4] OF LREAL;
	
	eCTRL_MODE_: E_CTRL_MODE;
	System_step: INT;
	
	i: INT ;
END_VAR
	
(* ================ Simulation Constant Parameter =======================*)
VAR CONSTANT
	fKp							:			ARRAY[1..4] OF REAL := [16.5, 17.5, 18.5, 19.5];
	fInit_Temp					:			ARRAY[1..4] OF REAL := [23.5, 24.5, 23.9, 24.2];
	tTimeConstant				:			ARRAY[1..4] OF TIME := [T#251.4S, T#301.4S, T#275.4S, T#292.4S];
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SIMULATION();

IF bEmergency_Stop THEN
	FOR i:=1 TO 4 BY 1 DO
		fSet_Value[i] := 0;
	END_FOR
		fPowerLimit := 0;
		eCTRL_MODE := eCTRL_MODE_IDLE;
		System_step :=0;
END_IF

IF bFirst THEN
	DEFAULT_PARA_SET();
	bFirst := FALSE ;
	System_step :=0;
END_IF

CASE System_step OF
		
	0:
		IF gbl.bStart_ THEN
			FOR i:=1 TO 4 BY 1 DO
				fLast_Set_Value[i] := fSet_Value[i];
				eCTRL_MODE := gbl.eCTRL_MODE_;
				System_step := 1;
			END_FOR
		ELSE
			System_step := 10;
		END_IF
	
	1:
		FOR i:=1 TO 4 BY 1 DO
			P_Value[i] :=gbl.P_Value_[i];
			I_Value[i] :=gbl.I_Value_[i];
			D_Value[i] :=gbl.D_Value_[i];
			
			IF P_Value[i] <= 0 THEN
				P_Value[i] := 0.1;
			ELSE
				P_Value[i] := P_Value[i];
			END_IF

			stCTRL_ParaController_Ex[i].KpHeat := P_Value[i];	
			stCTRL_ParaController_Ex[i].TnHeat := I_Value[i];
			stCTRL_ParaController_Ex[i].TvHeat := D_Value[i];
			stCTRL_ParaController_Ex[i].TdHeat := T#1S;
			
			System_step := 2;
			
		END_FOR
		
		System_step := 2;

	2:
		fPowerLimit:=gbl.fPowerLimit_;
		
		IF fPowerLimit > 100 THEN
			fPowerLimit := 100;
		ELSE 
			fPowerLimit := fPowerLimit;
		END_IF
		
		FOR i:=1 TO 4 BY 1 DO
			stCTRL_TempCtrlParameter[i].fYMax :=   fPowerLimit;
		
  
			fSet_Value[i] := gbl.fTargetTemp[i];
			bRampingUse := gbl.bRampingEnable;
			fRampingRate[i] := gbl.fRampingValue;
			
			stCTRL_RAMP_GENERATOR_PARAMS[i].fVeloNeg := fRampingRate[i] / 60.0;
			stCTRL_RAMP_GENERATOR_PARAMS[i].fVeloPos := fRampingRate[i] / 60.0;
			
			System_step := 3;
		
		END_FOR
 		
		System_step := 3;
		
	3:
		fSetManual   := gbl.fSetManual_;
		
		IF fSetManual > 100 THEN
			fSetManual := 100;
		ELSE
			fSetManual := fSetManual;
		END_IF
		
		FOR i:=1 TO 4 BY 1 DO
			stCTRL_TempCtrlParameter[i].fYManual         :=   fSetManual;          
			stCTRL_TempCtrlParameter[i].fYOnFailure      :=   fSet_Value[i];
		END_FOR
		
		System_step := 4;
  	
	4:
		FOR i:=1 TO 4 BY 1 DO
			fbCTRL_TempController[i]( eCtrlMode               := gbl.eCTRL_MODE_,      
									  bSelSetpoint            := FALSE,
									  fw1                     := fSet_Value[i],
									  fw2                     := ,            
									  fX                      := fPV_Value[i],      
									  fyManual                := fSetManual,
									  sParaControllerExternal := stCTRL_ParaController_Ex[i],
									  sControllerParameter    := stCTRL_TempCtrlParameter[i]
									  );
	  	END_FOR
		
		System_step := 10;
		   
		
	10:					  
		bStart := gbl.bStart_  := FALSE;
		System_step := 0;
		
END_CASE

Ramping();

FOR i:=1 TO 4 BY 1 DO 
	fbCTRL_TempController[i](
                 fw1                       := fRampingOut[i],
                 fX                        := fPV_Value[i],    
                 sParaControllerExternal   := stCTRL_ParaController_Ex[i],
                 sControllerParameter      := stCTRL_TempCtrlParameter[i],
                 fYAnalog                   => fMV_Out[i],
                 bYPWMPos                   => ,
                 bYPWMNeg                   => ,
                 dwAlarm                    => ,
                 fMaxOverShoot              => fMaxOvershoot,
                 tStartUpTime               => ,
                 eCtrlState                 => eCTRL_STATE[i],
                 sParaControllerInternal    => stCTRL_ParaController_In[i],
                 bError                     => bError,
                 eErrorId                   => nErrorID
                );
END_FOR
]]></ST>
    </Implementation>
    <Action Name="DEFAULT_PARA_SET" Id="{32742922-d914-4f69-897d-c3f500d727ac}">
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO 4 DO
	stCTRL_TempCtrlParameter[i].iMode				:=	e_Heat_Mode;
	stCTRL_TempCtrlParameter[i].iReactionOnFailure  :=	e_Fail_Action;
	stCTRL_TempCtrlParameter[i].dwAlarmSupp		    :=	16#FF_FF_FF_FF;		(* alarm suppression  Default 사용 *)
	stCTRL_TempCtrlParameter[i].fWMin				:=	0.0;
	stCTRL_TempCtrlParameter[i].fWMax				:=	500;
	stCTRL_TempCtrlParameter[i].bEnableSoftStart	:=	FALSE;
	stCTRL_TempCtrlParameter[i].fWStartUp			:=	30.0;
	stCTRL_TempCtrlParameter[i].tStartUp			:=	T#1S;
	stCTRL_TempCtrlParameter[i].bStartUpRamping	    :=	FALSE;
	stCTRL_TempCtrlParameter[i].fWStartUpVeloPos	:=	0.1;
	stCTRL_TempCtrlParameter[i].fWStartUpVeloNeg	:=	0.1;
	stCTRL_TempCtrlParameter[i].bFilter			    :=	FALSE;
	stCTRL_TempCtrlParameter[i].tFilter			    :=	T#0S;
	stCTRL_TempCtrlParameter[i].bDeadband			:=	FALSE;
	stCTRL_TempCtrlParameter[i].fEDeadband			:=	0.0;
	stCTRL_TempCtrlParameter[i].tPWMCycleTime		:=	T#1S;
	stCTRL_TempCtrlParameter[i].tPWMMinOffTime		:=	T#0S;
	stCTRL_TempCtrlParameter[i].tPWMMinOnTime		:=	T#0S;
	stCTRL_TempCtrlParameter[i].tPWMWaitingTime	    :=	T#0S;
	stCTRL_TempCtrlParameter[i].fYThresholdOff		:=	0.0;
	stCTRL_TempCtrlParameter[i].fYThresholdOn		:=	0.0;
	stCTRL_TempCtrlParameter[i].TempLow			    :=	-10.0;
	stCTRL_TempCtrlParameter[i].TempLowLow			:=	-5.0;
	stCTRL_TempCtrlParameter[i].TempHigh			:=	5.0;
	stCTRL_TempCtrlParameter[i].TempHighHigh		:=	10.0;
	stCTRL_TempCtrlParameter[i].TempAbsoluteHigh	:=	300.0;
	stCTRL_TempCtrlParameter[i].TempAbsoluteLow	    :=	0.0;
	stCTRL_TempCtrlParameter[i].tCtrlCycleTime		:= 	tCtrlCycleTime;
	stCTRL_TempCtrlParameter[i].tTaskCycleTime		:= 	tTaskCycleTime;
	stCTRL_TempCtrlParameter[i].fYMin				:=	0.0;
	stCTRL_TempCtrlParameter[i].iControllerType	    := eCTRL_ControllerType_PID;
	stCTRL_TempCtrlParameter[i].iFilterType		    := eCTRL_FilterType_FIRSTORDER;
	stCTRL_TempCtrlParameter[i].bEnablePreController:= FALSE;
	stCTRL_TempCtrlParameter[i].bEnableZones 		:= FALSE;
	stCTRL_TempCtrlParameter[i].bEnableCVFilter     := FALSE;
	
	stCTRL_TempCtrlParameter[i].bSelCtrlParameterSet := TRUE;
	
	stCTRL_RAMP_GENERATOR_PARAMS[i].tCtrlCycleTime		:= 	tCtrlCycleTime;
	stCTRL_RAMP_GENERATOR_PARAMS[i].tTaskCycleTime		:= 	tTaskCycleTime;
END_FOR

(*
stCTRL_TempCtrlParameter.iMode				:=	e_Heat_Mode;
stCTRL_TempCtrlParameter.iReactionOnFailure :=	e_Fail_Action;
stCTRL_TempCtrlParameter.dwAlarmSupp		:=	16#FF_FF_FF_FF;		(* alarm suppression  Default 사용 *)
stCTRL_TempCtrlParameter.fWMin				:=	0.0;
stCTRL_TempCtrlParameter.fWMax				:=	500;
stCTRL_TempCtrlParameter.bEnableSoftStart	:=	FALSE;
stCTRL_TempCtrlParameter.fWStartUp			:=	30.0;
stCTRL_TempCtrlParameter.tStartUp			:=	T#1S;
stCTRL_TempCtrlParameter.bStartUpRamping	:=	FALSE;
stCTRL_TempCtrlParameter.fWStartUpVeloPos	:=	0.1;
stCTRL_TempCtrlParameter.fWStartUpVeloNeg	:=	0.1;
stCTRL_TempCtrlParameter.bFilter			:=	FALSE;
stCTRL_TempCtrlParameter.tFilter			:=	T#0S;
stCTRL_TempCtrlParameter.bDeadband			:=	FALSE;
stCTRL_TempCtrlParameter.fEDeadband			:=	0.0;
stCTRL_TempCtrlParameter.tPWMCycleTime		:=	T#1S;
stCTRL_TempCtrlParameter.tPWMMinOffTime		:=	T#0S;
stCTRL_TempCtrlParameter.tPWMMinOnTime		:=	T#0S;
stCTRL_TempCtrlParameter.tPWMWaitingTime	:=	T#0S;
stCTRL_TempCtrlParameter.fYThresholdOff		:=	0.0;
stCTRL_TempCtrlParameter.fYThresholdOn		:=	0.0;
stCTRL_TempCtrlParameter.TempLow			:=	-10.0;
stCTRL_TempCtrlParameter.TempLowLow			:=	-5.0;
stCTRL_TempCtrlParameter.TempHigh			:=	5.0;
stCTRL_TempCtrlParameter.TempHighHigh		:=	10.0;
stCTRL_TempCtrlParameter.TempAbsoluteHigh	:=	300.0;
stCTRL_TempCtrlParameter.TempAbsoluteLow	:=	0.0;
stCTRL_TempCtrlParameter.tCtrlCycleTime		:= 	tCtrlCycleTime;
stCTRL_TempCtrlParameter.tTaskCycleTime		:= 	tTaskCycleTime;
stCTRL_TempCtrlParameter.fYMin				:=	0.0;
stCTRL_TempCtrlParameter.iControllerType	:= eCTRL_ControllerType_PID;
stCTRL_TempCtrlParameter.iFilterType		:= eCTRL_FilterType_FIRSTORDER;
stCTRL_TempCtrlParameter.bEnablePreController 	:= FALSE;
stCTRL_TempCtrlParameter.bEnableZones 		:= FALSE;
stCTRL_TempCtrlParameter.bEnableCVFilter 		:= FALSE;

stCTRL_TempCtrlParameter.bSelCtrlParameterSet := TRUE;

stCTRL_RAMP_GENERATOR_PARAMS.tCtrlCycleTime		:= 	tCtrlCycleTime;
stCTRL_RAMP_GENERATOR_PARAMS.tTaskCycleTime		:= 	tTaskCycleTime;
*)]]></ST>
      </Implementation>
    </Action>
    <Action Name="RAMPING" Id="{a539f539-fadd-4443-8597-045b2659f806}">
      <Implementation>
        <ST><![CDATA[
;
IF bRampingUse THEN
	FOR i:=1 TO 4 BY 1 DO
		fbCTRL_RAMP_GENERATOR[i]( bEnable   := bRampingUse,
								fStart   := fLast_Set_Value[i],
								fTarget  := fSet_Value[i],
								stParams := stCTRL_RAMP_GENERATOR_PARAMS[i],
								fOut   => fRampingOut[i],
								fVeloOut  => ,
								bValueReached => ,
								eErrorId => ,
								bError =>
								)
	;
	END_FOR					

ELSE
	FOR i:=1 TO 4 BY 1 DO
		fRampingOut[i] := fSet_Value[i];
	;
	END_FOR
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="SIMULATION" Id="{002ff4db-0c57-48f1-bd78-50bc62b7e087}">
      <Implementation>
        <ST><![CDATA[FOR i:=1 TO 4 BY 1 DO
	stPTParams[i].tTaskCycleTime	:= tTaskCycleTime;
	stPTParams[i].tCtrlCycleTime	:= tCtrlCycleTime;
	stPTParams[i].tT1				:= stPTParams[i].tT2 := tTimeConstant[i];
	stPTParams[i].fKp				:= fKp[i];


	fbCTRL_PT2[i](
					fIn			:= fMV_Out[i] ,
					eMode		:= eCtrl_MODE_ACTIVE,
					stParams	:= stPTParams[i],
					fOut		=> fPV_Value_[i]
					);		
END_FOR

FOR i := 1 TO 4 DO
	IF fPV_Value_[i] <= fInit_Temp[i] THEN
		fPV_Value[i] := fInit_Temp[i];
	ELSE
		fPV_Value[i] := fPV_Value_[i];
	END_IF 
END_FOR
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="851" Count="0" />
      <LineId Id="1540" Count="0" />
      <LineId Id="852" Count="0" />
      <LineId Id="1437" Count="0" />
      <LineId Id="853" Count="0" />
      <LineId Id="1440" Count="0" />
      <LineId Id="854" Count="3" />
      <LineId Id="1148" Count="0" />
      <LineId Id="1144" Count="2" />
      <LineId Id="1174" Count="0" />
      <LineId Id="1143" Count="0" />
      <LineId Id="861" Count="1" />
      <LineId Id="872" Count="2" />
      <LineId Id="1433" Count="0" />
      <LineId Id="875" Count="0" />
      <LineId Id="1435" Count="1" />
      <LineId Id="1434" Count="0" />
      <LineId Id="878" Count="3" />
      <LineId Id="883" Count="0" />
      <LineId Id="1055" Count="0" />
      <LineId Id="1176" Count="1" />
      <LineId Id="1175" Count="0" />
      <LineId Id="1149" Count="0" />
      <LineId Id="884" Count="2" />
      <LineId Id="1139" Count="0" />
      <LineId Id="888" Count="0" />
      <LineId Id="961" Count="0" />
      <LineId Id="964" Count="0" />
      <LineId Id="967" Count="2" />
      <LineId Id="1256" Count="1" />
      <LineId Id="1056" Count="0" />
      <LineId Id="963" Count="0" />
      <LineId Id="893" Count="0" />
      <LineId Id="895" Count="2" />
      <LineId Id="1150" Count="1" />
      <LineId Id="898" Count="4" />
      <LineId Id="904" Count="0" />
      <LineId Id="970" Count="0" />
      <LineId Id="905" Count="0" />
      <LineId Id="973" Count="0" />
      <LineId Id="906" Count="1" />
      <LineId Id="1259" Count="0" />
      <LineId Id="909" Count="5" />
      <LineId Id="1261" Count="0" />
      <LineId Id="1260" Count="0" />
      <LineId Id="1262" Count="0" />
      <LineId Id="1152" Count="0" />
      <LineId Id="1428" Count="0" />
      <LineId Id="915" Count="0" />
      <LineId Id="1154" Count="1" />
      <LineId Id="916" Count="4" />
      <LineId Id="1153" Count="0" />
      <LineId Id="921" Count="0" />
      <LineId Id="923" Count="1" />
      <LineId Id="974" Count="0" />
      <LineId Id="925" Count="1" />
      <LineId Id="928" Count="1" />
      <LineId Id="975" Count="0" />
      <LineId Id="930" Count="8" />
      <LineId Id="976" Count="1" />
      <LineId Id="939" Count="0" />
      <LineId Id="1431" Count="0" />
      <LineId Id="940" Count="3" />
      <LineId Id="1341" Count="0" />
      <LineId Id="944" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="1342" Count="0" />
      <LineId Id="1156" Count="0" />
      <LineId Id="1159" Count="14" />
      <LineId Id="1157" Count="1" />
      <LineId Id="1423" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.DEFAULT_PARA_SET">
      <LineId Id="49" Count="0" />
      <LineId Id="55" Count="38" />
      <LineId Id="51" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="2" Count="1" />
      <LineId Id="1" Count="0" />
      <LineId Id="5" Count="1" />
      <LineId Id="4" Count="0" />
      <LineId Id="8" Count="3" />
      <LineId Id="7" Count="0" />
      <LineId Id="13" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="17" Count="3" />
      <LineId Id="22" Count="1" />
      <LineId Id="25" Count="4" />
      <LineId Id="16" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="38" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="46" Count="0" />
      <LineId Id="53" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.RAMPING">
      <LineId Id="2" Count="2" />
      <LineId Id="20" Count="0" />
      <LineId Id="5" Count="9" />
      <LineId Id="21" Count="0" />
      <LineId Id="15" Count="2" />
      <LineId Id="22" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.SIMULATION">
      <LineId Id="2" Count="4" />
      <LineId Id="23" Count="0" />
      <LineId Id="8" Count="5" />
      <LineId Id="1" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="40" Count="1" />
      <LineId Id="34" Count="1" />
      <LineId Id="18" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>