<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{e591b92d-02fc-493d-897c-d8225ccc0ad6}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	System_step                 :           LREAL    :=0;
	fMV_Out						:			LREAL;
	fPV_Value					:			LREAL;
	
	tTime						:			TIME;
	tTaskCycleTime				:			TIME := T#1MS;
	tCtrlCycleTime				:			TIME := T#200MS;
	
	fbCTRL_PT2					: 			FB_CTRL_PT2;
	stPTParams					: 			ST_CTRL_PT2_PARAMS;
	
	stCTRL_ParaController_Ex	:			ST_CTRL_ParaController;
	stCTRL_ParaController_In	:			ST_CTRL_ParaController;
	stCTRL_TempCtrlParameter	:			ST_CTRL_TempCtrlParameter;
	
	fbCTRL_TempController		:			FB_CTRL_TempController;
		
	eCTRL_STATE					:			E_CTRL_STATE;
	
	e_Heat_Mode					:			E_CTRL_ControlMode 			:= eCTRL_ControlMode_HEATING;
	e_Fail_Action				:			E_CTRL_ReactionOnFailure 	:= eCTRL_ReactionOnFailure_NoFailure;
	
	bError						:			BOOL;
	nErrorID					:			INT;
	fMaxOvershoot				:			LREAL;
	
	bFirst						:			BOOL := TRUE;
	
	(* Ramp Parameter Set *)
	bRampingUse					:			BOOL;	
	fRampingRate				:			LREAL						:= 10.0;
	
	
	(* =============== Setting Item 입력 =============== *)
	
	(* PID Set Parameter *)
	P_Value						:			LREAL						:= 3;
	I_Value						:			TIME						:= T#300S;
	D_Value						:			TIME						:= T#50S;
	
	
	
	(* Power Limit Set *)
	fPowerLimit					:			LREAL;
	
	(* Manual Control 시 Power 출력값 *)
	fSetManual					:			LREAL;
	
	(*	Heater Mode	*)
	eCTRL_MODE					:			E_CTRL_MODE;			(* Auto Mode 동작은 2 : eCTRL_MODE_ACTIVE 설정 *)
	
	(*	온도 설정 입력	*)
	fSet_Value					:			LREAL;
	fLast_Set_Value             :           LREAL;
	bStart						:			BOOL;
	
	(*	비상정지	*)
	bEmergency_Stop				:			BOOL;
	
	fbCTRL_RAMP_GENERATOR : FB_CTRL_RAMP_GENERATOR;
	stCTRL_RAMP_GENERATOR_PARAMS :ST_CTRL_RAMP_GENERATOR_PARAMS;
	
	fRampingOut :LREAL;
	
	eCTRL_MODE_: E_CTRL_MODE;
END_VAR
	
(* ================ Simulation Constant Parameter =======================*)

VAR CONSTANT
	fKp							:			REAL := 16.5;
	fInit_Temp					:			REAL := 23.5;
	tTimeConstant				:			TIME := T#251.4S;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bFirst THEN
   DEFAULT_PARA_SET();
   bFirst      := FALSE;
END_IF

SIMULATION();

IF bEmergency_Stop THEN
   eCTRL_MODE_ := eCTRL_MODE_IDLE;
   bStart := TRUE;
END_IF

bStart      :=   gbl.bStart_;
IF bStart THEN
   fSet_Value   := gbl.fSet_Value_;
   fLast_Set_Value := fSet_Value;
   eCTRL_MODE   := gbl.eCTRL_MODE_;
   
   (* PID Parameter Set *)
   P_Value:= gbl.P_Value_;
   I_Value:= gbl.I_Value_;
   D_Value := gbl.D_Value_;
   IF P_Value <= 0 THEN
      P_Value := 0.1;
   END_IF
   stCTRL_ParaController_Ex.KpHeat := P_Value;            (* P_Value 최소값으로 0 사용 불가 *)
   stCTRL_ParaController_Ex.TnHeat   := I_Value;
   stCTRL_ParaController_Ex.TvHeat := D_Value;
   stCTRL_ParaController_Ex.TdHeat   := T#1S;
(*
   (* Temp Controller Parameter Set *)
   stCTRL_TempCtrlParameter.bEnableRamping      :=   bRampingUse;
   stCTRL_TempCtrlParameter.fWVeloPos         :=   fRampingRate / 60.0;
   stCTRL_TempCtrlParameter.fWVeloNeg         :=   fRampingRate / 60.0;
   *)
   fPowerLimit:=gbl.fPowerLimit_;
   IF fPowerLimit > 100 THEN
      fPowerLimit := 100;
   END_IF
   stCTRL_TempCtrlParameter.fYMax            :=   fPowerLimit;
   
   fSet_Value := gbl.fTargetTemp;
   bRampingUse := gbl.bRampingEnable;
   fRampingRate := gbl.fRampingValue;
   
   stCTRL_RAMP_GENERATOR_PARAMS.fVeloNeg := fRampingRate / 60.0;
   stCTRL_RAMP_GENERATOR_PARAMS.fVeloPos := fRampingRate / 60.0;
   
   fSetManual   := gbl.fSetManual_;
   IF fSetManual > 100 THEN
      fSetManual := 100;
   END_IF
   stCTRL_TempCtrlParameter.fYManual         :=   fSetManual;         (* Manual 사용을 원할경우 변수 입력 후  eCTRL_MODE 값을 Manual 선택 *) 
   stCTRL_TempCtrlParameter.fYOnFailure      :=   fSet_Value;
   
   
   fbCTRL_TempController(eCtrlMode               := eCTRL_MODE,      (* Control Mode 입력 0 : IDLE, 2 : Active, 3 : Manual, 4 := Reset *)
                    bSelSetpoint            := FALSE,
                    fw1                  := fSet_Value,
                    fw2                  := ,            (* 사용안함 *)
                    fX                  := fPV_Value,      (* Temp Reading Value Input *)
                    fyManual               := fSetManual,
                    sParaControllerExternal   := stCTRL_ParaController_Ex,
                    sControllerParameter      := stCTRL_TempCtrlParameter
                    );
   
   bStart := gbl.bStart_   := FALSE;
END_IF

RAMPING();

fbCTRL_TempController(
                 fw1                  := fRampingOut,
                 fX                  := fPV_Value,      (* Temp Reading Value Input *)
                 sParaControllerExternal   := stCTRL_ParaController_Ex,
                 sControllerParameter      := stCTRL_TempCtrlParameter,
                 fYAnalog               => fMV_Out,
                 bYPWMPos               => ,
                 bYPWMNeg               => ,
                 dwAlarm               => ,
                 fMaxOverShoot            => fMaxOvershoot,
                 tStartUpTime            => ,
                 eCtrlState            => eCTRL_STATE,
                 sParaControllerInternal   => stCTRL_ParaController_In,
                 bError               => bError,
                 eErrorId               => nErrorID
                );

   
   (*
   (* PID Parameter Set *)
   stCTRL_ParaController_Ex.KpHeat := P_Value;
   stCTRL_ParaController_Ex.TnHeat   := I_Value;
   stCTRL_ParaController_Ex.TvHeat := D_Value;
   stCTRL_ParaController_Ex.TdHeat   := T#1S;
   stCTRL_ParaController_Ex.KpCool := P_Value;
   stCTRL_ParaController_Ex.TnCool   := I_Value;
   stCTRL_ParaController_Ex.TvCool := D_Value;
   stCTRL_ParaController_Ex.TdCool   := T#1S;
         
   
   (* Temp Controller Parameter Set *)
   stCTRL_TempCtrlParameter.bEnableRamping      :=   bRampingUse;
   stCTRL_TempCtrlParameter.fWVeloPos         :=   fRampingRate / 60.0;
   stCTRL_TempCtrlParameter.fWVeloNeg         :=   fRampingRate / 60.0;
   
   
   IF fPowerLimit > 100 THEN
      fPowerLimit := 100;
   END_IF
   stCTRL_TempCtrlParameter.fYMax            :=   fPowerLimit;
   
   
   IF fSetManual > 100 THEN
      fSetManual := 100;
   END_IF
   stCTRL_TempCtrlParameter.fYManual         :=   fSetManual;
   stCTRL_TempCtrlParameter.fYOnFailure      :=   fSet_Value;
   
   fbCTRL_TempController(eCtrlMode               := eCTRL_MODE,      (* Control Mode 입력 0 : IDLE, 2 : Active, 3 : Manual, 4 := Reset *)
                    bSelSetpoint            := FALSE,
                    fw1                  := fSet_Value,
                    fw2                  := fSet_Value,            (* 사용안함 *)
                    fX                  := fPV_Value,      (* Temp Reading Value Input *)
                    fyManual               := fSetManual,
                    sParaControllerExternal   := stCTRL_ParaController_Ex,
                    sControllerParameter      := stCTRL_TempCtrlParameter,
                    fYAnalog               => fMV_Out,
                      bYPWMPos               => ,
                      bYPWMNeg               => ,
                      dwAlarm               => ,
                      fMaxOverShoot            => fMaxOvershoot,
                      tStartUpTime            => ,
                      eCtrlState            => eCTRL_STATE,
                      sParaControllerInternal   => stCTRL_ParaController_In,
                      bError               => bError,
                      eErrorId               => nErrorID
                    );
      
   //bStart := FALSE;   
*)]]></ST>
    </Implementation>
    <Action Name="DEFAULT_PARA_SET" Id="{32742922-d914-4f69-897d-c3f500d727ac}">
      <Implementation>
        <ST><![CDATA[
stCTRL_TempCtrlParameter.iMode				:=	e_Heat_Mode;
stCTRL_TempCtrlParameter.iReactionOnFailure :=	e_Fail_Action;
stCTRL_TempCtrlParameter.dwAlarmSupp		:=	16#FF_FF_FF_FF;		(* alarm suppression  Default 사용 *)
stCTRL_TempCtrlParameter.fWMin				:=	0.0;
stCTRL_TempCtrlParameter.fWMax				:=	500;
stCTRL_TempCtrlParameter.bEnableSoftStart	:=	FALSE;
stCTRL_TempCtrlParameter.fWStartUp			:=	30.0;
stCTRL_TempCtrlParameter.tStartUp			:=	T#1S;
stCTRL_TempCtrlParameter.bStartUpRamping	:=	FALSE;
stCTRL_TempCtrlParameter.fWStartUpVeloPos	:=	0.1;
stCTRL_TempCtrlParameter.fWStartUpVeloNeg	:=	0.1;
stCTRL_TempCtrlParameter.bFilter			:=	FALSE;
stCTRL_TempCtrlParameter.tFilter			:=	T#0S;
stCTRL_TempCtrlParameter.bDeadband			:=	FALSE;
stCTRL_TempCtrlParameter.fEDeadband			:=	0.0;
stCTRL_TempCtrlParameter.tPWMCycleTime		:=	T#1S;
stCTRL_TempCtrlParameter.tPWMMinOffTime		:=	T#0S;
stCTRL_TempCtrlParameter.tPWMMinOnTime		:=	T#0S;
stCTRL_TempCtrlParameter.tPWMWaitingTime	:=	T#0S;
stCTRL_TempCtrlParameter.fYThresholdOff		:=	0.0;
stCTRL_TempCtrlParameter.fYThresholdOn		:=	0.0;
stCTRL_TempCtrlParameter.TempLow			:=	-10.0;
stCTRL_TempCtrlParameter.TempLowLow			:=	-5.0;
stCTRL_TempCtrlParameter.TempHigh			:=	5.0;
stCTRL_TempCtrlParameter.TempHighHigh		:=	10.0;
stCTRL_TempCtrlParameter.TempAbsoluteHigh	:=	300.0;
stCTRL_TempCtrlParameter.TempAbsoluteLow	:=	0.0;
stCTRL_TempCtrlParameter.tCtrlCycleTime		:= 	tCtrlCycleTime;
stCTRL_TempCtrlParameter.tTaskCycleTime		:= 	tTaskCycleTime;
stCTRL_TempCtrlParameter.fYMin				:=	0.0;
stCTRL_TempCtrlParameter.iControllerType	:= eCTRL_ControllerType_PID;
stCTRL_TempCtrlParameter.iFilterType		:= eCTRL_FilterType_FIRSTORDER;
stCTRL_TempCtrlParameter.bEnablePreController 	:= FALSE;
stCTRL_TempCtrlParameter.bEnableZones 		:= FALSE;
stCTRL_TempCtrlParameter.bEnableCVFilter 		:= FALSE;

stCTRL_TempCtrlParameter.bSelCtrlParameterSet := TRUE;

stCTRL_RAMP_GENERATOR_PARAMS.tCtrlCycleTime		:= 	tCtrlCycleTime;
stCTRL_RAMP_GENERATOR_PARAMS.tTaskCycleTime		:= 	tTaskCycleTime;]]></ST>
      </Implementation>
    </Action>
    <Action Name="RAMPING" Id="{bb32e954-ea4c-4981-8542-1d30e318b4ea}">
      <Implementation>
        <ST><![CDATA[;

IF bRampingUse THEN
	fbCTRL_RAMP_GENERATOR( bEnable   := bRampingUse,
							fStart   := fLast_Set_Value,
							fTarget  := fSet_Value,
							stParams := stCTRL_RAMP_GENERATOR_PARAMS,
							fOut      => fRampingOut,
							fVeloOut  => ,
							bValueReached => ,
							eErrorId => ,
							bError =>
							)
						
;
ELSE
	fRampingOut := fSet_Value;
	;
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="SIMULATION" Id="{002ff4db-0c57-48f1-bd78-50bc62b7e087}">
      <Implementation>
        <ST><![CDATA[
stPTParams.tTaskCycleTime	:= tTaskCycleTime;
stPTParams.tCtrlCycleTime	:= tCtrlCycleTime;
stPTParams.tT1				:= stPTParams.tT2 := tTimeConstant;
stPTParams.fKp				:= fKp;

fbCTRL_PT2(
			fIn			:= fMV_Out ,
			eMode		:= eCtrl_MODE_ACTIVE,
			stParams	:= stPTParams,
			fOut		=> fPV_Value
			);
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="MAIN">
      <LineId Id="1035" Count="21" />
      <LineId Id="1176" Count="0" />
      <LineId Id="1058" Count="116" />
      <LineId Id="882" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.DEFAULT_PARA_SET">
      <LineId Id="44" Count="0" />
      <LineId Id="2" Count="1" />
      <LineId Id="1" Count="0" />
      <LineId Id="5" Count="1" />
      <LineId Id="4" Count="0" />
      <LineId Id="8" Count="3" />
      <LineId Id="7" Count="0" />
      <LineId Id="13" Count="2" />
      <LineId Id="12" Count="0" />
      <LineId Id="17" Count="3" />
      <LineId Id="22" Count="1" />
      <LineId Id="25" Count="4" />
      <LineId Id="16" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="38" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.RAMPING">
      <LineId Id="1" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="7" Count="7" />
      <LineId Id="16" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MAIN.SIMULATION">
      <LineId Id="2" Count="4" />
      <LineId Id="8" Count="5" />
      <LineId Id="1" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>